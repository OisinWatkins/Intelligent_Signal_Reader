
        ---------    Running Demo for the DFT Layer    ---------


>>
>> This file will run a bespoke model to handle the following task:
>> -> `Speach-to-Text conversion`
>>
>> To accomplish this, I will define 2 models:
>> -> One with the DFT Layer high up in the architecture.
>> -> One using more typical Machine Learning Practices.
>>
>> After training has completed I will run each model through an extensive test
>> to determine whether or not the DFT layer bears any benefit to signal processing networks.
>> The typical Machine Learning model will be pulled from blogposts on the internet. Doing this
>> should ensure I'm comparing my work to the tried and tested models used in the world today.
>>
>> The data I'm using for this application comes from Kaggle:
>> https://www.kaggle.com/c/tensorflow-speech-recognition-challenge/data>>


>>
>> First, we’ll visualize the audio signal in the time domain:
>>

16000

>>
>> Now, let’s understand the number of recordings for each voice command:
>>


>>
>> What’s next? A look at the distribution of the duration of recordings:
>>


>>
>> In the data exploration part earlier, we have seen that the duration of a few recordings is less than 1
>> second and the sampling rate is too high. So, let us read the audio waves and use the below-preprocessing
>> steps to deal with this. Here are the two steps we’ll follow:
>>
>> -> Resampling
>> -> Removing shorter commands of less than 1 second
>>
>> Let us define these preprocessing steps in the below code snippet:
>>

yes
no
up
down
left
right
on
off
stop
go

>>
>> Convert the output labels to integer encoded:
>>


>>
>> Next, we will train the model on 80% of the data and validate on the remaining 20%:
>>

2020-10-06 22:54:59.538653: I tensorflow/core/platform/cpu_feature_guard.cc:145] This TensorFlow binary is optimized with Intel(R) MKL-DNN to use the following CPU instructions in performance critical operations:  AVX AVX2
To enable them in non-MKL-DNN operations, rebuild TensorFlow with the appropriate compiler flags.
2020-10-06 22:54:59.558022: I tensorflow/core/common_runtime/process_util.cc:115] Creating new thread pool with default inter op setting: 12. Tune using inter_op_parallelism_threads for best performance.
Model: "model"
_________________________________________________________________
Layer (type)                 Output Shape              Param #
=================================================================
input_1 (InputLayer)         [(None, 8000, 1)]         0
_________________________________________________________________
conv1d (Conv1D)              (None, 7988, 8)           112
_________________________________________________________________
max_pooling1d (MaxPooling1D) (None, 2662, 8)           0
_________________________________________________________________
dropout (Dropout)            (None, 2662, 8)           0
_________________________________________________________________
conv1d_1 (Conv1D)            (None, 2652, 16)          1424
_________________________________________________________________
max_pooling1d_1 (MaxPooling1 (None, 884, 16)           0
_________________________________________________________________
dropout_1 (Dropout)          (None, 884, 16)           0
_________________________________________________________________
conv1d_2 (Conv1D)            (None, 876, 32)           4640
_________________________________________________________________
max_pooling1d_2 (MaxPooling1 (None, 292, 32)           0
_________________________________________________________________
dropout_2 (Dropout)          (None, 292, 32)           0
_________________________________________________________________
conv1d_3 (Conv1D)            (None, 286, 64)           14400
_________________________________________________________________
max_pooling1d_3 (MaxPooling1 (None, 95, 64)            0
_________________________________________________________________
dropout_3 (Dropout)          (None, 95, 64)            0
_________________________________________________________________
flatten (Flatten)            (None, 6080)              0
_________________________________________________________________
dense (Dense)                (None, 256)               1556736
_________________________________________________________________
dropout_4 (Dropout)          (None, 256)               0
_________________________________________________________________
dense_1 (Dense)              (None, 128)               32896
_________________________________________________________________
dropout_5 (Dropout)          (None, 128)               0
_________________________________________________________________
dense_2 (Dense)              (None, 10)                1290
=================================================================
Total params: 1,611,498
Trainable params: 1,611,498
Non-trainable params: 0
_________________________________________________________________
Train on 17049 samples, validate on 4263 samples
Epoch 1/100
17024/17049 [============================>.] - ETA: 0s - loss: 1.9948 - accuracy: 0.2376WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 138s 8ms/sample - loss: 1.9942 - accuracy: 0.2377 - val_loss: 1.5500 - val_accuracy: 0.4403
Epoch 2/100
17024/17049 [============================>.] - ETA: 0s - loss: 1.4600 - accuracy: 0.4610WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 136s 8ms/sample - loss: 1.4597 - accuracy: 0.4612 - val_loss: 1.2156 - val_accuracy: 0.5916
Epoch 3/100
17024/17049 [============================>.] - ETA: 0s - loss: 1.2423 - accuracy: 0.5499WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 139s 8ms/sample - loss: 1.2425 - accuracy: 0.5496 - val_loss: 1.0731 - val_accuracy: 0.6277
Epoch 4/100
17024/17049 [============================>.] - ETA: 0s - loss: 1.1034 - accuracy: 0.6067WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 140s 8ms/sample - loss: 1.1038 - accuracy: 0.6066 - val_loss: 0.9362 - val_accuracy: 0.6913
Epoch 5/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.9832 - accuracy: 0.6572WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 138s 8ms/sample - loss: 0.9831 - accuracy: 0.6573 - val_loss: 0.8774 - val_accuracy: 0.7000
Epoch 6/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.8889 - accuracy: 0.6904WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 137s 8ms/sample - loss: 0.8885 - accuracy: 0.6905 - val_loss: 0.8053 - val_accuracy: 0.7199
Epoch 7/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.7861 - accuracy: 0.7271WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 139s 8ms/sample - loss: 0.7858 - accuracy: 0.7272 - val_loss: 0.7090 - val_accuracy: 0.7664
Epoch 8/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.7218 - accuracy: 0.7521WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 140s 8ms/sample - loss: 0.7215 - accuracy: 0.7521 - val_loss: 0.6937 - val_accuracy: 0.7673
Epoch 9/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.6566 - accuracy: 0.7730WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 138s 8ms/sample - loss: 0.6568 - accuracy: 0.7729 - val_loss: 0.7141 - val_accuracy: 0.7722
Epoch 10/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.6218 - accuracy: 0.7844WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 139s 8ms/sample - loss: 0.6221 - accuracy: 0.7843 - val_loss: 0.6150 - val_accuracy: 0.7811
Epoch 11/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.5822 - accuracy: 0.7986WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 139s 8ms/sample - loss: 0.5820 - accuracy: 0.7987 - val_loss: 0.5781 - val_accuracy: 0.8060
Epoch 12/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.5455 - accuracy: 0.8111WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 139s 8ms/sample - loss: 0.5456 - accuracy: 0.8111 - val_loss: 0.5967 - val_accuracy: 0.8088
Epoch 13/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.5215 - accuracy: 0.8225WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 139s 8ms/sample - loss: 0.5215 - accuracy: 0.8224 - val_loss: 0.5236 - val_accuracy: 0.8243
Epoch 14/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.5066 - accuracy: 0.8271WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 142s 8ms/sample - loss: 0.5062 - accuracy: 0.8273 - val_loss: 0.6137 - val_accuracy: 0.7940
Epoch 15/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.4809 - accuracy: 0.8363WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 139s 8ms/sample - loss: 0.4806 - accuracy: 0.8364 - val_loss: 0.5535 - val_accuracy: 0.8154
Epoch 16/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.4670 - accuracy: 0.8388WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 140s 8ms/sample - loss: 0.4670 - accuracy: 0.8388 - val_loss: 0.6475 - val_accuracy: 0.7870
Epoch 17/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.4582 - accuracy: 0.8403WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 139s 8ms/sample - loss: 0.4584 - accuracy: 0.8403 - val_loss: 0.5613 - val_accuracy: 0.8163
Epoch 18/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.4354 - accuracy: 0.8497WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 138s 8ms/sample - loss: 0.4352 - accuracy: 0.8498 - val_loss: 0.5511 - val_accuracy: 0.8220
Epoch 19/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.4229 - accuracy: 0.8516WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 138s 8ms/sample - loss: 0.4226 - accuracy: 0.8517 - val_loss: 0.5975 - val_accuracy: 0.8072
Epoch 20/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.4063 - accuracy: 0.8598WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 139s 8ms/sample - loss: 0.4059 - accuracy: 0.8598 - val_loss: 0.6110 - val_accuracy: 0.8062
Epoch 21/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3910 - accuracy: 0.8645WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 138s 8ms/sample - loss: 0.3908 - accuracy: 0.8646 - val_loss: 0.5694 - val_accuracy: 0.8175
Epoch 22/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3963 - accuracy: 0.8663WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 139s 8ms/sample - loss: 0.3961 - accuracy: 0.8664 - val_loss: 0.5314 - val_accuracy: 0.8236
Epoch 23/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3681 - accuracy: 0.8742WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 138s 8ms/sample - loss: 0.3683 - accuracy: 0.8741 - val_loss: 0.4990 - val_accuracy: 0.8370
Epoch 24/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3605 - accuracy: 0.8761WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 138s 8ms/sample - loss: 0.3607 - accuracy: 0.8761 - val_loss: 0.4966 - val_accuracy: 0.8431
Epoch 25/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3508 - accuracy: 0.8817WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 138s 8ms/sample - loss: 0.3506 - accuracy: 0.8818 - val_loss: 0.5521 - val_accuracy: 0.8264
Epoch 26/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3555 - accuracy: 0.8762WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 135s 8ms/sample - loss: 0.3552 - accuracy: 0.8763 - val_loss: 0.5455 - val_accuracy: 0.8266
Epoch 27/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3498 - accuracy: 0.8808WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 136s 8ms/sample - loss: 0.3496 - accuracy: 0.8809 - val_loss: 0.5293 - val_accuracy: 0.8372
Epoch 28/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3523 - accuracy: 0.8798WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 136s 8ms/sample - loss: 0.3526 - accuracy: 0.8797 - val_loss: 0.5752 - val_accuracy: 0.8238
Epoch 29/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3368 - accuracy: 0.8834WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 135s 8ms/sample - loss: 0.3370 - accuracy: 0.8832 - val_loss: 0.5652 - val_accuracy: 0.8234
Epoch 30/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3309 - accuracy: 0.8872WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 135s 8ms/sample - loss: 0.3310 - accuracy: 0.8872 - val_loss: 0.4948 - val_accuracy: 0.8461
Epoch 31/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3256 - accuracy: 0.8889WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 136s 8ms/sample - loss: 0.3257 - accuracy: 0.8888 - val_loss: 0.5521 - val_accuracy: 0.8358
Epoch 32/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3231 - accuracy: 0.8912WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 136s 8ms/sample - loss: 0.3229 - accuracy: 0.8913 - val_loss: 0.5183 - val_accuracy: 0.8403
Epoch 33/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.3189 - accuracy: 0.8943WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 136s 8ms/sample - loss: 0.3193 - accuracy: 0.8941 - val_loss: 0.5039 - val_accuracy: 0.8386
Epoch 34/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.2984 - accuracy: 0.8974WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 135s 8ms/sample - loss: 0.2983 - accuracy: 0.8974 - val_loss: 0.5773 - val_accuracy: 0.8288
Epoch 35/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.2944 - accuracy: 0.9001WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 135s 8ms/sample - loss: 0.2945 - accuracy: 0.9001 - val_loss: 0.5292 - val_accuracy: 0.8471
Epoch 36/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.2920 - accuracy: 0.8983WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 135s 8ms/sample - loss: 0.2918 - accuracy: 0.8984 - val_loss: 0.5070 - val_accuracy: 0.8480
Epoch 37/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.2809 - accuracy: 0.9041WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 137s 8ms/sample - loss: 0.2807 - accuracy: 0.9042 - val_loss: 0.5390 - val_accuracy: 0.8445
Epoch 38/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.2908 - accuracy: 0.9019WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 135s 8ms/sample - loss: 0.2906 - accuracy: 0.9020 - val_loss: 0.5793 - val_accuracy: 0.8327
Epoch 39/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.2806 - accuracy: 0.9019WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 136s 8ms/sample - loss: 0.2808 - accuracy: 0.9018 - val_loss: 0.5537 - val_accuracy: 0.8438
Epoch 40/100
17024/17049 [============================>.] - ETA: 0s - loss: 0.2838 - accuracy: 0.9034WARNING:tensorflow:Can save best model only with val_acc available, skipping.
17049/17049 [==============================] - 136s 8ms/sample - loss: 0.2839 - accuracy: 0.9033 - val_loss: 0.5164 - val_accuracy: 0.8473
Epoch 00040: early stopping